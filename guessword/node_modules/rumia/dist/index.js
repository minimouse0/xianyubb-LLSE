"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OneBot_WebSocket = void 0;
var uuid = __importStar(require("uuid"));
var connect_1 = require("./res/connect");
var events = __importStar(require("./res/events"));
var parser_1 = __importDefault(require("./res/parser"));
var OneBot_WebSocket = /** @class */ (function () {
    function OneBot_WebSocket(Options) {
        var _this = this;
        this.socket = new connect_1.WebSocket(Options.url, Options.maxRetries);
        this.SocketEvent = events.socket;
        this.BotEvent = events.bot;
        this.EchoEvent = events.echo;
        this.socket.onopen = function (event) {
            _this.handleConnect();
        };
        this.socket.onmessage = function (data) {
            _this.handleMessage(data);
        };
    }
    OneBot_WebSocket.prototype.handleConnect = function () {
        this.SocketEvent.emit('connect');
    };
    OneBot_WebSocket.prototype.handleMessage = function (message) {
        var _this = this;
        this.SocketEvent.emit('message', message);
        parser_1.default(message, function (type, data) {
            if (type === 'echo')
                events.echo.emit(data.uuid, data);
            _this.BotEvent.emit(type, data);
        });
    };
    /**
     * @description 发送私聊消息
     */
    OneBot_WebSocket.prototype.send_private_msg = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "send_private_msg",
                params: options,
                echo: echo
            });
        });
    };
    /**
     * @description 发送群消息
     */
    OneBot_WebSocket.prototype.send_group_msg = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "send_group_msg",
                params: options,
                echo: echo
            });
        });
    };
    /**
     * @description 撤回消息
     */
    OneBot_WebSocket.prototype.delete_msg = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "delete_msg",
                params: options,
                echo: echo
            });
        });
    };
    /**
     * @description 获取合并转发消息
     */
    OneBot_WebSocket.prototype.get_forward_msg = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "get_forward_msg",
                params: options,
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.send_like = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "send_like",
                params: options,
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.set_group_kick = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "set_group_kick",
                params: options,
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.set_group_ban = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "set_group_ban",
                params: options,
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.set_group_anonymous_ban = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "set_group_anonymous_ban",
                params: options,
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.set_group_whole_ban = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "set_group_whole_ban",
                params: options,
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.set_group_admin = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "set_group_admin",
                params: options,
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.set_group_anonymous = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "set_group_anonymous",
                params: options,
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.set_group_card = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "set_group_card",
                params: options,
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.set_group_name = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "set_group_name",
                params: options,
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.set_group_leave = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "set_group_leave",
                params: options,
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.set_group_special_title = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "set_group_special_title",
                params: options,
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.set_friend_add_request = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "set_friend_add_request",
                params: options,
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.set_group_add_request = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "set_group_add_request",
                params: options,
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.get_stranger_info = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "get_stranger_info",
                params: options,
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.get_group_info = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "get_group_info",
                params: options,
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.get_group_member_info = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "get_group_member_info",
                params: options,
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.get_group_honor_info = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "get_group_honor_info",
                params: options,
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.get_cookies = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "get_cookies",
                params: options,
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.get_credentials = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "get_credentials",
                params: options,
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.get_record = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "get_record",
                params: options,
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.get_image = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "get_image",
                params: options,
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.set_restart = function (options) {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "set_restart",
                params: options,
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.clean_cache = function () {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "clean_cache",
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.can_send_image = function () {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "can_send_image",
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.can_send_record = function () {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "can_send_record",
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.get_status = function () {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "get_status",
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.get_version_info = function () {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "get_version_info",
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.get_csrf_token = function () {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "get_csrf_token",
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.get_group_member_list = function () {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "get_group_member_list",
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.get_group_list = function () {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "get_group_list",
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.get_friend_list = function () {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "get_friend_list",
                echo: echo
            });
        });
    };
    OneBot_WebSocket.prototype.get_login_info = function () {
        var _this = this;
        return new Promise(function (r) {
            var echo = uuid.v4();
            _this.EchoEvent.once(echo, function (data) {
                r(data);
            });
            _this.socket.send({
                action: "get_login_info",
                echo: echo
            });
        });
    };
    return OneBot_WebSocket;
}());
exports.OneBot_WebSocket = OneBot_WebSocket;
