"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CharactersFilter = void 0;
/**
 * @method CharactersFilter
 * @param {Object} avatars UserRoles.data.avatars
 */
const _1 = require(".");
class CharactersFilter {
    constructor(avatars) {
        this._list = [];
        this._list = avatars;
        this.nicknameFilter = new _1.CharacterNickname();
    }
    /**
     * @function name 通过名称或id获取玩家指定角色的信息
     */
    name(nameFind) {
        const id = this.nicknameFilter.getIdByNickname(nameFind);
        if (id) {
            return this.id(id);
        }
        return this._list.find(({ name }) => name === nameFind);
    }
    id(idFind) {
        return this._list.find(({ id }) => id === idFind);
    }
    /**
     * @function element 通过指定元素筛选玩家的角色
     */
    element(el) {
        el = el.toLocaleLowerCase();
        // 中文名转换
        const elAlias = {
            火: 'pyro',
            fire: 'pyro',
            水: 'hydro',
            water: 'hydro',
            风: 'anemo',
            wind: 'anemo',
            雷: 'electro',
            thunder: 'electro',
            冰: 'cryo',
            ice: 'cryo',
            岩: 'geo',
            rock: 'geo',
            草: 'dendro',
            grass: 'dendro',
        };
        el = elAlias[el] || el;
        return this._list.filter(({ element }) => element.toLowerCase() === el);
    }
    /**
     * @function rarity
     * @param {Array|Number} 4 或 5 或 [4, 5]
     */
    rarity(rarity) {
        // 缓存
        let queryRarity = [];
        if (typeof rarity === 'number') {
            queryRarity = [rarity];
        }
        else if (rarity.constructor !== Array) {
            return [];
        }
        return this._list.filter(({ rarity }) => queryRarity.includes(rarity));
    }
    /**
     * @function all
     */
    all() {
        return this._list;
    }
}
exports.CharactersFilter = CharactersFilter;
//# sourceMappingURL=CharactersFilter.js.map