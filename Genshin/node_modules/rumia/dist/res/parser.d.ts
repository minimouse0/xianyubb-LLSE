import { MessageSegment } from "./types";
export interface Data {
    time: number;
    self_id: number;
    post_type: string;
}
/** 聊天消息 **/
export interface Message extends Data {
    message_type: ('private' | 'group');
    sub_type: string;
    message_id: number;
    user_id: number;
    message: (string | MessageSegment[]);
    raw_message: string;
    font: number;
    sender: Sender;
    group_id: number;
    anonymous: (null | Anonymous);
}
export interface Sender {
    user_id: number;
    nickname: string;
    sex?: string;
    age?: number;
    card?: string;
    area?: string;
    level?: string;
    role?: string;
    title?: string;
}
export interface Anonymous {
    id: number;
    name: string;
    flag: string;
}
export interface GroupMessage {
    raw_message: string;
    message: (string | MessageSegment[]);
    message_id: number;
    group_id: number;
    sender: Sender;
    anonymous: (null | Anonymous);
    font: number;
    self_id: number;
}
export interface PrivateMessage {
    raw_message: string;
    message: (string | MessageSegment[]);
    message_id: number;
    sender: Sender;
    font: number;
    self_id: number;
}
/** 通知消息 **/
export interface Notice extends Data {
    notice_type: string;
    group_id: number;
    user_id: number;
    file: NoticeFile;
    sub_type: string;
    operator_id: number;
    duration: number;
    message_id: number;
    target_id: number;
    honor_type: ('talkative' | 'performer' | 'emotion');
}
export interface NoticeFile {
    id: string;
    name: string;
    size: number;
    busid: number;
}
export interface GroupFileUpload {
    group_id: number;
    user_id: number;
    file: NoticeFile;
}
export interface GroupAdminChange {
    group_id: number;
    user_id: number;
    type: string;
}
export interface GroupMemberChange {
    group_id: number;
    user_id: number;
    type: string;
    operator: number;
}
export interface GroupMute {
    group_id: number;
    user_id: number;
    type: string;
    operator: number;
    duration: number;
}
export interface FriendAdd {
    user_id: number;
}
export interface GroupRecall {
    group_id: number;
    user_id: number;
    operator: number;
    message_id: number;
}
export interface FriendRecall {
    user_id: number;
    message_id: number;
}
export interface GroupPoke {
    group_id: number;
    user_id: number;
    target_id: number;
}
export interface LuckyKing {
    group_id: number;
    user_id: number;
    target_id: number;
}
export interface GroupHonor {
    group_id: number;
    user_id: number;
    type: string;
}
/** Meta消息 **/
export interface heartbeat {
    self_id: number;
    status: any;
    time: number;
    interval: number;
}
/** 请求消息 **/
export interface Request extends Data {
    request_type: string;
    user_id: number;
    group_id: number;
    comment: string;
    sub_type: string;
    flag: string;
}
export interface FriendRequest {
    user_id: number;
    comment: string;
    flag: string;
}
export interface GroupRequest {
    user_id: number;
    group_id: number;
    comment: string;
    type: string;
    flag: string;
}
export interface Meta {
    _post_method?: number;
    interval?: number;
    status?: any;
    meta_event_type: string;
    post_type: string;
    self_id: number;
    sub_type: string;
    time: number;
}
export interface ApiReturn {
    status: string;
    retcode: number;
    data: any;
    uuid: string;
}
declare const _default: (msg: any, callback: (EventName: string, data?: any) => void) => void;
export default _default;
