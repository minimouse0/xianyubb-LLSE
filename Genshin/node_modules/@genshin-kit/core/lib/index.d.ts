/**
 * @name GenshinKit
 * @desc An API wrapper for fetching player data of Genshin Impact
 *
 * @author 机智的小鱼君 <dragon-fish@qq.com>
 * @license Apache-2.0
 */
export declare const name = "genshin-kit";
import { _getApiEndpoint } from './module/_getApiEndpoint';
import { _getDS } from './module/_getDS';
import { _getHttpHeaders } from './module/_getHttpHeaders';
import { _getServer } from './module/_getServer';
import { _hoyolabVersion } from './module/_hoyolabVersion';
import { request } from './module/request';
export * as util from './util';
import { Abyss, Activities, AppCache, Character, AppServerLocale, AppServerType, UserInfo, DailyNote } from './types';
export declare class GenshinKit {
    _cache: AppCache;
    cookie: string;
    serverType: AppServerType;
    serverLocale: AppServerLocale;
    _getApiEndpoint: typeof _getApiEndpoint;
    _hoyolabVersion: typeof _hoyolabVersion;
    _getHttpHeaders: typeof _getHttpHeaders;
    _getDS: typeof _getDS;
    _getServer: typeof _getServer;
    request: typeof request;
    getCharacters: (uid: number, noCache?: boolean) => Promise<Character[]>;
    getUserRoles: (uid: number, noCache?: boolean) => Promise<Character[]>;
    getAbyss: (uid: number, type?: 1 | 2, noCache?: boolean) => Promise<Abyss>;
    getCurAbyss: (uid: number, noCache?: boolean) => Promise<Abyss>;
    getPrevAbyss: (uid: number, noCache?: boolean) => Promise<Abyss>;
    setCookie: (cookie: string) => this;
    constructor();
    /**
     * @method loginWithCookie
     * @param {String} cookie
     */
    loginWithCookie(cookie: string): this;
    /**
     * @method clearCache
     */
    clearCache(): this;
    /**
     * @method setServerType
     * @param type Server type: cn => China server, os => Oversea server
     */
    setServerType(type: AppServerType): this;
    /**
     * @method setServerLanguage
     * @param locale Server locale: Language in which character names, weapons, etc. will be displayed.
     */
    setServerLocale(locale: AppServerLocale): this;
    /**
     * @function getUserInfo
     * @param {Number} uid
     * @returns {Promise<UserInfo>}
     */
    getUserInfo(uid: number, noCache?: boolean): Promise<UserInfo>;
    /**
     * @function getAllCharacters
     * @param {Number} uid
     * @returns {Promise<Character[]>}
     */
    getAllCharacters(uid: number, noCache?: boolean): Promise<Character[]>;
    getCharacterDetailsUrl(uid: number, id: number): string;
    /**
     * @function getSpiralAbyss
     * @param {Number} uid
     * @param {1|2} type 1 cur, 2 prev
     * @returns {Promise<Abyss>}
     */
    getSpiralAbyss(uid: number, type?: 1 | 2, noCache?: boolean): Promise<Abyss>;
    /**
     * @method getActivities 获取限时活动信息
     */
    getActivities(uid: number): Promise<Activities>;
    /**
     * @function getCurrentAbyss
     */
    getCurrentAbyss(uid: number, noCache?: boolean): Promise<Abyss>;
    /**
     * @function getPreviousAbyss
     */
    getPreviousAbyss(uid: number, noCache?: boolean): Promise<Abyss>;
    /**
     * @function getDailyNote
     * @param {Number} uid
     * @returns {Promise<DailyNote>}
     */
    getDailyNote(uid: number, noCache?: boolean): Promise<DailyNote>;
}
